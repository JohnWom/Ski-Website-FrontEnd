{"ast":null,"code":"var _jsxFileName = \"/Users/johnwomelsdorf/Documents/Code/Ski-Website-FrontEnd/src/components/lineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport * as d3 from 'd3';\n\n// Data Should be in object form {x: Val, y: Val}, ...\n// Otherwise it will not be seen by generator\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart(props) {\n  _s();\n  const {\n    data\n  } = props;\n  const svgRef = useRef();\n  const layout = {\n    width: 300,\n    height: 200\n  };\n  const svg = d3.select;\n  // creates scales for graph\n  const graph_details = {\n    xScale: d3.scaleTime().range([0, layout.width]),\n    yScale: d3.scaleLinear().range([layout.height, 0]),\n    lineGenerator: d3.line()\n  };\n\n  // Sets Top and Bottom Values for X and Y Axis\n  graph_details.xScale.domain(d3.extent(data, function (d) {\n    return d.date;\n  }));\n  graph_details.yScale.domain(0, 100);\n\n  // Tells generator where to find the data\n  graph_details.lineGenerator.x(d => graph_details.xScale(d[\"x\"]));\n  graph_details.lineGenerator.y(d => graph_details.yScale(d[\"y\"]));\n\n  // Generates Graph\n  const [lineData, setLineData] = useState(() => {\n    graph_details.lineGenerator(data);\n  });\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"conditions__graph\",\n    width: \"100%\",\n    height: layout.height,\n    viewBox: `0 0 ${layout.width} ${layout.height}`,\n    preserveAspectRatio: \"none\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      className: \"graph__data\",\n      d: lineData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n}\n_s(LineChart, \"drmONrYGAugcx6An/MzwK29Wwfk=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useRef","d3","LineChart","props","data","svgRef","layout","width","height","svg","select","graph_details","xScale","scaleTime","range","yScale","scaleLinear","lineGenerator","line","domain","extent","d","date","x","y","lineData","setLineData"],"sources":["/Users/johnwomelsdorf/Documents/Code/Ski-Website-FrontEnd/src/components/lineChart.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport * as d3 from 'd3';\n\n// Data Should be in object form {x: Val, y: Val}, ...\n// Otherwise it will not be seen by generator\n\nfunction LineChart(props) {\n    const { data } = props;\n\n    const svgRef = useRef();\n\n    const layout = {\n        width: 300,\n        height: 200\n    };\n    \n    const svg = d3.select\n    // creates scales for graph\n    const graph_details = {\n        xScale: d3.scaleTime().range([0, layout.width]),\n        yScale: d3.scaleLinear().range([layout.height, 0]),\n        lineGenerator: d3.line()\n    };\n\n    // Sets Top and Bottom Values for X and Y Axis\n    graph_details.xScale.domain(d3.extent(data, function(d) { return d.date; }));\n    graph_details.yScale.domain(0, 100);\n    \n    // Tells generator where to find the data\n    graph_details.lineGenerator.x(d => graph_details.xScale(d[\"x\"]));\n    graph_details.lineGenerator.y(d => graph_details.yScale(d[\"y\"]));\n\n    // Generates Graph\n    const [lineData, setLineData] = useState(() => {\n        graph_details.lineGenerator(data);\n    });\n\n    return <svg \n        className='conditions__graph'\n        width={\"100%\"}\n        height={layout.height}\n        viewBox={`0 0 ${layout.width} ${layout.height}`}\n        preserveAspectRatio = 'none'>\n            <path className='graph__data' d={ lineData } />\n        </svg>\n}\n\nexport default LineChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,KAAKC,EAAE,MAAM,IAAI;;AAExB;AACA;AAAA;AAEA,SAASC,SAAS,CAACC,KAAK,EAAE;EAAA;EACtB,MAAM;IAAEC;EAAK,CAAC,GAAGD,KAAK;EAEtB,MAAME,MAAM,GAAGL,MAAM,EAAE;EAEvB,MAAMM,MAAM,GAAG;IACXC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACZ,CAAC;EAED,MAAMC,GAAG,GAAGR,EAAE,CAACS,MAAM;EACrB;EACA,MAAMC,aAAa,GAAG;IAClBC,MAAM,EAAEX,EAAE,CAACY,SAAS,EAAE,CAACC,KAAK,CAAC,CAAC,CAAC,EAAER,MAAM,CAACC,KAAK,CAAC,CAAC;IAC/CQ,MAAM,EAAEd,EAAE,CAACe,WAAW,EAAE,CAACF,KAAK,CAAC,CAACR,MAAM,CAACE,MAAM,EAAE,CAAC,CAAC,CAAC;IAClDS,aAAa,EAAEhB,EAAE,CAACiB,IAAI;EAC1B,CAAC;;EAED;EACAP,aAAa,CAACC,MAAM,CAACO,MAAM,CAAClB,EAAE,CAACmB,MAAM,CAAChB,IAAI,EAAE,UAASiB,CAAC,EAAE;IAAE,OAAOA,CAAC,CAACC,IAAI;EAAE,CAAC,CAAC,CAAC;EAC5EX,aAAa,CAACI,MAAM,CAACI,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC;;EAEnC;EACAR,aAAa,CAACM,aAAa,CAACM,CAAC,CAACF,CAAC,IAAIV,aAAa,CAACC,MAAM,CAACS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAChEV,aAAa,CAACM,aAAa,CAACO,CAAC,CAACH,CAAC,IAAIV,aAAa,CAACI,MAAM,CAACM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;EAEhE;EACA,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,MAAM;IAC3CY,aAAa,CAACM,aAAa,CAACb,IAAI,CAAC;EACrC,CAAC,CAAC;EAEF,oBAAO;IACH,SAAS,EAAC,mBAAmB;IAC7B,KAAK,EAAE,MAAO;IACd,MAAM,EAAEE,MAAM,CAACE,MAAO;IACtB,OAAO,EAAG,OAAMF,MAAM,CAACC,KAAM,IAAGD,MAAM,CAACE,MAAO,EAAE;IAChD,mBAAmB,EAAG,MAAM;IAAA,uBACxB;MAAM,SAAS,EAAC,aAAa;MAAC,CAAC,EAAGiB;IAAU;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAC7C;AACd;AAAC,GAvCQvB,SAAS;AAAA,KAATA,SAAS;AAyClB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}