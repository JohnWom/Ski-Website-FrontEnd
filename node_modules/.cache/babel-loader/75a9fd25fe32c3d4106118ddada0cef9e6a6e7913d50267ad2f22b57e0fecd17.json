{"ast":null,"code":"var _jsxFileName = \"/Users/johnwomelsdorf/Documents/Code/Ski-Website-FrontEnd/src/components/lineChart.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\n\n// Data Should be in object form {x: Val, y: Val}, ...\n// Otherwise it will not be seen by generator\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart(props) {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    data\n  } = props;\n  const svgRef = useRef();\n  _s(useEffect(_s(() => {\n    _s();\n    const layout = {\n      width: 300,\n      height: 200\n    };\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height).style('background', '#FAF9F6');\n\n    //create x scale\n    const xScale = d3.scaleTime().domain([Date(2022, 11, 20), Date(2023, 4, 10)]);\n\n    //create y scale\n    const yScale = d3.scaleLinear().domain([0, 100]).range([layout.height, 0]);\n\n    // Sets Top and Bottom Values for X and Y Axis\n    graph_details.xScale.domain(d3.extent(data, function (d) {\n      return d.date;\n    }));\n    graph_details.yScale.domain(0, 100);\n\n    // Tells generator where to find the data\n    graph_details.lineGenerator.x(d => graph_details.xScale(d[\"x\"]));\n    graph_details.lineGenerator.y(d => graph_details.yScale(d[\"y\"]));\n\n    // Generates Graph\n    const [lineData, setLineData] = useState(() => {\n      graph_details.lineGenerator(data);\n    });\n  }, \"uKmP6R02bBKS4CRx7JNb7pei/yk=\")), \"uKmP6R02bBKS4CRx7JNb7pei/yk=\");\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"conditions__graph\",\n    width: \"100%\",\n    height: layout.height,\n    viewBox: `0 0 ${layout.width} ${layout.height}`,\n    preserveAspectRatio: \"none\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      className: \"graph__data\",\n      d: lineData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 12\n  }, this);\n}\n_s2(LineChart, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useRef","useEffect","d3","LineChart","props","data","svgRef","layout","width","height","svg","select","current","attr","style","xScale","scaleTime","domain","Date","yScale","scaleLinear","range","graph_details","extent","d","date","lineGenerator","x","y","lineData","setLineData"],"sources":["/Users/johnwomelsdorf/Documents/Code/Ski-Website-FrontEnd/src/components/lineChart.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\n\n// Data Should be in object form {x: Val, y: Val}, ...\n// Otherwise it will not be seen by generator\n\nfunction LineChart(props) {\n    const { data } = props;\n\n    const svgRef = useRef();\n    useEffect(() => {\n        const layout = {\n            width: 300,\n            height: 200\n        };\n        const svg = d3.select(svgRef.current)\n            .attr('width', width)\n            .attr('height', height)\n            .style('background', '#FAF9F6');\n\n\n\n        //create x scale\n        const xScale = d3.scaleTime()\n            .domain([Date(2022, 11, 20), Date(2023, 4, 10)]);\n        \n        //create y scale\n        const yScale = d3.scaleLinear()\n            .domain([0, 100])\n            .range([layout.height, 0]);\n\n    \n        // Sets Top and Bottom Values for X and Y Axis\n        graph_details.xScale.domain(d3.extent(data, function(d) { return d.date; }));\n        graph_details.yScale.domain(0, 100);\n        \n        // Tells generator where to find the data\n        graph_details.lineGenerator.x(d => graph_details.xScale(d[\"x\"]));\n        graph_details.lineGenerator.y(d => graph_details.yScale(d[\"y\"]));\n    \n        // Generates Graph\n        const [lineData, setLineData] = useState(() => {\n            graph_details.lineGenerator(data);\n        });\n\n\n    });\n\n    \n\n    return <svg \n        className='conditions__graph'\n        width={\"100%\"}\n        height={layout.height}\n        viewBox={`0 0 ${layout.width} ${layout.height}`}\n        preserveAspectRatio = 'none'>\n            <path className='graph__data' d={ lineData } />\n        </svg>\n}\n\nexport default LineChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,KAAKC,EAAE,MAAM,IAAI;;AAExB;AACA;AAAA;AAEA,SAASC,SAAS,CAACC,KAAK,EAAE;EAAA;EAAA;EACtB,MAAM;IAAEC;EAAK,CAAC,GAAGD,KAAK;EAEtB,MAAME,MAAM,GAAGN,MAAM,EAAE;EACvB,GAAAC,SAAS,IAAC,MAAM;IAAA;IACZ,MAAMM,MAAM,GAAG;MACXC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACZ,CAAC;IACD,MAAMC,GAAG,GAAGR,EAAE,CAACS,MAAM,CAACL,MAAM,CAACM,OAAO,CAAC,CAChCC,IAAI,CAAC,OAAO,EAAEL,KAAK,CAAC,CACpBK,IAAI,CAAC,QAAQ,EAAEJ,MAAM,CAAC,CACtBK,KAAK,CAAC,YAAY,EAAE,SAAS,CAAC;;IAInC;IACA,MAAMC,MAAM,GAAGb,EAAE,CAACc,SAAS,EAAE,CACxBC,MAAM,CAAC,CAACC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAEA,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;IAEpD;IACA,MAAMC,MAAM,GAAGjB,EAAE,CAACkB,WAAW,EAAE,CAC1BH,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAChBI,KAAK,CAAC,CAACd,MAAM,CAACE,MAAM,EAAE,CAAC,CAAC,CAAC;;IAG9B;IACAa,aAAa,CAACP,MAAM,CAACE,MAAM,CAACf,EAAE,CAACqB,MAAM,CAAClB,IAAI,EAAE,UAASmB,CAAC,EAAE;MAAE,OAAOA,CAAC,CAACC,IAAI;IAAE,CAAC,CAAC,CAAC;IAC5EH,aAAa,CAACH,MAAM,CAACF,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC;;IAEnC;IACAK,aAAa,CAACI,aAAa,CAACC,CAAC,CAACH,CAAC,IAAIF,aAAa,CAACP,MAAM,CAACS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAChEF,aAAa,CAACI,aAAa,CAACE,CAAC,CAACJ,CAAC,IAAIF,aAAa,CAACH,MAAM,CAACK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEhE;IACA,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,MAAM;MAC3CuB,aAAa,CAACI,aAAa,CAACrB,IAAI,CAAC;IACrC,CAAC,CAAC;EAGN,CAAC,kCAAC;EAIF,oBAAO;IACH,SAAS,EAAC,mBAAmB;IAC7B,KAAK,EAAE,MAAO;IACd,MAAM,EAAEE,MAAM,CAACE,MAAO;IACtB,OAAO,EAAG,OAAMF,MAAM,CAACC,KAAM,IAAGD,MAAM,CAACE,MAAO,EAAE;IAChD,mBAAmB,EAAG,MAAM;IAAA,uBACxB;MAAM,SAAS,EAAC,aAAa;MAAC,CAAC,EAAGoB;IAAU;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAC7C;AACd;AAAC,IApDQ1B,SAAS;AAAA,KAATA,SAAS;AAsDlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}