{"ast":null,"code":"var _jsxFileName = \"/Users/johnwomelsdorf/Documents/Code/Ski-Website-FrontEnd/src/components/lineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\n\n// Data Should be in object form {x: Val, y: Val}, ...\n// Otherwise it will not be seen by generator\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart(props) {\n  _s();\n  const {\n    data\n  } = props;\n  const svgRef = useRef();\n  useEffect(() => {\n    const layout = {\n      width: 300,\n      height: 200\n    };\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height).style('background', '#FAF9F6');\n\n    //create x scale\n    const xScale = d3.scaleTime().domain([Date(2022, 11, 20), Date(2023, 4, 10)]);\n\n    //create y scale\n    const yScale = d3.scaleLinear().domain([0, 100]).range([layout.height, 0]);\n    const generateScaledLine = d3.line().x(xScale).y(yScale).curve(d3.curveCardinal);\n    const xAxis = d3.axisBottom(xScale).ticks(12);\n    const yAxis = d3.axisLeft(yScale).ticks(10);\n\n    // Tells generator where to find the data\n    graph_details.lineGenerator.x(d => graph_details.xScale(d[\"x\"]));\n    graph_details.lineGenerator.y(d => graph_details.yScale(d[\"y\"]));\n  });\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: \"svgRef\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n}\n_s(LineChart, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useRef","useEffect","d3","LineChart","props","data","svgRef","layout","width","height","svg","select","current","attr","style","xScale","scaleTime","domain","Date","yScale","scaleLinear","range","generateScaledLine","line","x","y","curve","curveCardinal","xAxis","axisBottom","ticks","yAxis","axisLeft","graph_details","lineGenerator","d"],"sources":["/Users/johnwomelsdorf/Documents/Code/Ski-Website-FrontEnd/src/components/lineChart.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\n\n// Data Should be in object form {x: Val, y: Val}, ...\n// Otherwise it will not be seen by generator\n\nfunction LineChart(props) {\n    const { data } = props;\n\n    const svgRef = useRef();\n    useEffect(() => {\n        const layout = {\n            width: 300,\n            height: 200\n        };\n        const svg = d3.select(svgRef.current)\n            .attr('width', width)\n            .attr('height', height)\n            .style('background', '#FAF9F6');\n\n\n\n        //create x scale\n        const xScale = d3.scaleTime()\n            .domain([Date(2022, 11, 20), Date(2023, 4, 10)]);\n        \n        //create y scale\n        const yScale = d3.scaleLinear()\n            .domain([0, 100])\n            .range([layout.height, 0]);\n\n        const generateScaledLine = d3.line()\n            .x(xScale)\n            .y(yScale)\n            .curve(d3.curveCardinal);\n\n\n        const xAxis = d3.axisBottom(xScale)\n            .ticks(12)\n\n        const yAxis = d3.axisLeft(yScale)\n            .ticks(10)\n        \n        // Tells generator where to find the data\n        graph_details.lineGenerator.x(d => graph_details.xScale(d[\"x\"]));\n        graph_details.lineGenerator.y(d => graph_details.yScale(d[\"y\"]));\n\n\n    });\n\n    \n\n    return <svg ref='svgRef'></svg>;\n}\n\nexport default LineChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,KAAKC,EAAE,MAAM,IAAI;;AAExB;AACA;AAAA;AAEA,SAASC,SAAS,CAACC,KAAK,EAAE;EAAA;EACtB,MAAM;IAAEC;EAAK,CAAC,GAAGD,KAAK;EAEtB,MAAME,MAAM,GAAGN,MAAM,EAAE;EACvBC,SAAS,CAAC,MAAM;IACZ,MAAMM,MAAM,GAAG;MACXC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACZ,CAAC;IACD,MAAMC,GAAG,GAAGR,EAAE,CAACS,MAAM,CAACL,MAAM,CAACM,OAAO,CAAC,CAChCC,IAAI,CAAC,OAAO,EAAEL,KAAK,CAAC,CACpBK,IAAI,CAAC,QAAQ,EAAEJ,MAAM,CAAC,CACtBK,KAAK,CAAC,YAAY,EAAE,SAAS,CAAC;;IAInC;IACA,MAAMC,MAAM,GAAGb,EAAE,CAACc,SAAS,EAAE,CACxBC,MAAM,CAAC,CAACC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAEA,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;IAEpD;IACA,MAAMC,MAAM,GAAGjB,EAAE,CAACkB,WAAW,EAAE,CAC1BH,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAChBI,KAAK,CAAC,CAACd,MAAM,CAACE,MAAM,EAAE,CAAC,CAAC,CAAC;IAE9B,MAAMa,kBAAkB,GAAGpB,EAAE,CAACqB,IAAI,EAAE,CAC/BC,CAAC,CAACT,MAAM,CAAC,CACTU,CAAC,CAACN,MAAM,CAAC,CACTO,KAAK,CAACxB,EAAE,CAACyB,aAAa,CAAC;IAG5B,MAAMC,KAAK,GAAG1B,EAAE,CAAC2B,UAAU,CAACd,MAAM,CAAC,CAC9Be,KAAK,CAAC,EAAE,CAAC;IAEd,MAAMC,KAAK,GAAG7B,EAAE,CAAC8B,QAAQ,CAACb,MAAM,CAAC,CAC5BW,KAAK,CAAC,EAAE,CAAC;;IAEd;IACAG,aAAa,CAACC,aAAa,CAACV,CAAC,CAACW,CAAC,IAAIF,aAAa,CAAClB,MAAM,CAACoB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAChEF,aAAa,CAACC,aAAa,CAACT,CAAC,CAACU,CAAC,IAAIF,aAAa,CAACd,MAAM,CAACgB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAGpE,CAAC,CAAC;EAIF,oBAAO;IAAK,GAAG,EAAC;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAO;AACnC;AAAC,GA/CQhC,SAAS;AAAA,KAATA,SAAS;AAiDlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}